
#
# Author: Jim Kowalkowski
# Date: 2/96
#
# $Id$
#
# $Log$
#
# Simple build system for all the platforms I've tested on

VPATH=.:..

ifdef HOST_ARCH
CCTYPE = $(HOST_ARCH)
else
CCTYPE = vomit
endif

ifeq ($(CCTYPE),solaris)
VERBOSE = +w
CC = cc
CCC = CC
CC_NORMAL = $(CC)
LIB_FLAGS = -lsocket -lnsl # -lposix4
MORE_FLAGS = -DSOLARIS -I$(HOME)/src/data -I$(HOME)/src/data/$(HOST_ARCH) -I$(HOME)/test3.12/base/include
POSIX_LEVEL = 2 # 4
endif

ifeq ($(CCTYPE),sun4)
VERBOSE = +w
CC=purify acc
CCC=purify CC
# CCC = CC
# CC = acc
CC_NORMAL = acc
LIB_FLAGS =
MORE_FLAGS = -DSUN4 -I$(HOME)/src/data -I$(HOME)/src/data/$(HOST_ARCH) -I$(HOME)/test3.12/base/include
POSIX_LEVEL = 2
endif

ifeq ($(CCTYPE),linux)
VERBOSE = -Wall -Winline
CC = gcc
CCC = g++
CC_NORMAL = $(CC)
LIB_FLAGS =
MORE_FLAGS = -DLINUX -I$(HOME)/src/data -I$(HOME)/src/data/$(HOST_ARCH) -I$(HOME)/include
POSIX_LEVEL = 2
endif

ifeq ($(CCTYPE),hp700)
VERBOSE =
CC = c89 -Aa
CCC = CC +a1
CC_NORMAL = $(CC)
LIB_FLAGS =
MORE_FLAGS = -DHP700
POSIX_LEVEL = 2
endif

LD = ld
AR = ar
RANLIB = ranlib
PROF = # -p
OPTIM = -g # -O
# COMP_FLAGS = -D_POSIX_C_SOURCE=$(POSIX_LEVEL) -D$(CCTYPE) $(MORE_FLAGS)
COMP_FLAGS = -D$(CCTYPE) $(MORE_FLAGS)
LDFLAGS = $(VERBOSE) $(OPTIM) $(PROF) -L$(HOME)/test3.12/base/lib/$(HOST_ARCH) -L. -L$(HOME)/src/data/$(HOST_ARCH)
CCFLAGS = $(VERBOSE) $(OPTIM) $(PROF) $(COMP_FLAGS) -I. -I..
CXXFLAGS = $(CCFLAGS)
CFLAGS = $(CXXFLAGS)
CXX = $(CCC)
DEPLIB = none
LIBFLAGS = -lgdd -lca -lCom -lAs $(LIB_FLAGS)

SRCS = gateClient.cc gateServer.cc gateBase.cc gateway.cc \
       gateResources.cc gateList.cc gateIpc.cc gateTest.cc gateCA.cc
OBJS = gateClient.o gateServer.o gateBase.o gateway.o \
       gateResources.o gateList.o gateIpc.o gateTest.o gateCA.o
INCS = gateClient.h gateServer.h gateBase.h \
	   gateMsg.h gateResources.h gateList.h gateIpc.h gateTest.h gateCA.h

# -----------------------------
ifndef HOST_ARCH
problem:
	@echo "you must set the HOST_ARCH environment variable"
endif

# ------------generate the required makefiles------------

ifndef IN_OBJ_DIR
first_rule: $(HOST_ARCH)/Makefile
	(cd $(HOST_ARCH); gnumake all)

$(HOST_ARCH)/Makefile: Makefile
	if [ ! -d "$(HOST_ARCH)" ]; \
	then \
		mkdir $(HOST_ARCH); \
	fi
	echo "IN_OBJ_DIR=1" > $@
	cat $< >> $@
endif

# -----------------------------
all: gateway # $(DEPLIB)

check_arch:
	@echo "architecture=$(CCTYPE)"

# --------to build a library---------
$(DEPLIB): $(OBJS)
	/bin/rm -f $@
	$(AR) r $@ $^
ifeq ($(CCTYPE),sun4)
	$(RANLIB) $@
endif
ifeq ($(CCTYPE),vw)
	$(RANLIB) $@
endif

# -----------------------------
gateway: $(OBJS)
	$(CCC) $(LDFLAGS) -o $@ $^ $(LIBFLAGS)

# -----------------------------
gateClient.o: gateClient.cc $(INCS)
gateTest.o: gateTest.cc $(INCS)
gateCA.o: gateCA.cc $(INCS)
gateServer.o: gateServer.cc $(INCS)
gateBase.o: gateBase.cc $(INCS)
gateway.o: gateway.cc $(INCS)
gateIpc.o: gateIpc.cc $(INCS)
gateList.o: gateList.cc $(INCS)
gateResources.o: gateResources.cc $(INCS)

ifdef IN_OBJ_DIR
clean: 
	/bin/rm -f *.o *.a gateway *pure* p.out
	/bin/rm -f mon.out
else
clean:
	/bin/rm -rf $(HOST_ARCH)
endif
